java.io.IO
java.io.Console#println(Object;)
java.io.Console#print(Object;)
java.io.Console#readln(String;)
java.io.Console#format(Locale;String;Object[];)
java.io.Console#printf(Locale;String;Object[];)
java.io.Console#readLine(Locale;String;Object[];)
java.io.Console#readPassword(Locale;String;Object[];)
java.net.Inet4Address#ofPosixLiteral(String;)
java.lang.foreign.SymbolLookup#findOrThrow(String;)
java.lang.reflect.ClassFileFormatVersion#RELEASE_23
java.lang.runtime.ExactConversionsSupport
java.lang.classfile.constantpool.ConstantPool#entryByIndex(int;Class<T>;)
java.lang.classfile.TypeKind#newarrayCode()
java.lang.classfile.TypeKind#fromNewarrayCode(int;)
java.lang.classfile.ClassFile#JAVA_23_VERSION
java.lang.classfile.Signature.TypeArg.Bounded.WildcardIndicator
java.lang.classfile.Signature.TypeArg#of(java.lang.classfile.Signature.RefTypeSig;)
java.lang.classfile.Signature.TypeArg#unbounded()
java.lang.classfile.Signature.TypeArg#extendsOf(java.lang.classfile.Signature.RefTypeSig;)
java.lang.classfile.Signature.TypeArg#superOf(java.lang.classfile.Signature.RefTypeSig;)
java.lang.classfile.Signature.TypeArg#bounded(java.lang.classfile.Signature.TypeArg.Bounded.WildcardIndicator;java.lang.classfile.Signature.RefTypeSig;)
java.lang.classfile.Attributes#annotationDefault()
java.lang.classfile.Attributes#bootstrapMethods()
java.lang.classfile.Attributes#characterRangeTable()
java.lang.classfile.Attributes#code()
java.lang.classfile.Attributes#compilationId()
java.lang.classfile.Attributes#constantValue()
java.lang.classfile.Attributes#deprecated()
java.lang.classfile.Attributes#enclosingMethod()
java.lang.classfile.Attributes#exceptions()
java.lang.classfile.Attributes#innerClasses()
java.lang.classfile.Attributes#lineNumberTable()
java.lang.classfile.Attributes#localVariableTable()
java.lang.classfile.Attributes#localVariableTypeTable()
java.lang.classfile.Attributes#methodParameters()
java.lang.classfile.Attributes#module()
java.lang.classfile.Attributes#moduleHashes()
java.lang.classfile.Attributes#moduleMainClass()
java.lang.classfile.Attributes#modulePackages()
java.lang.classfile.Attributes#moduleResolution()
java.lang.classfile.Attributes#moduleTarget()
java.lang.classfile.Attributes#nestHost()
java.lang.classfile.Attributes#nestMembers()
java.lang.classfile.Attributes#permittedSubclasses()
java.lang.classfile.Attributes#record()
java.lang.classfile.Attributes#runtimeInvisibleAnnotations()
java.lang.classfile.Attributes#runtimeInvisibleParameterAnnotations()
java.lang.classfile.Attributes#runtimeInvisibleTypeAnnotations()
java.lang.classfile.Attributes#runtimeVisibleAnnotations()
java.lang.classfile.Attributes#runtimeVisibleParameterAnnotations()
java.lang.classfile.Attributes#runtimeVisibleTypeAnnotations()
java.lang.classfile.Attributes#signature()
java.lang.classfile.Attributes#sourceDebugExtension()
java.lang.classfile.Attributes#sourceFile()
java.lang.classfile.Attributes#sourceId()
java.lang.classfile.Attributes#stackMapTable()
java.lang.classfile.Attributes#synthetic()
java.lang.classfile.ClassReader#readEntryOrNull(int;Class<T>;)
java.lang.classfile.CodeBuilder#loadLocal(TypeKind;int;)
java.lang.classfile.CodeBuilder#storeLocal(TypeKind;int;)
java.lang.classfile.CodeBuilder#branch(Opcode;Label;)
java.lang.classfile.CodeBuilder#return_(TypeKind;)
java.lang.classfile.CodeBuilder#fieldAccess(Opcode;FieldRefEntry;)
java.lang.classfile.CodeBuilder#fieldAccess(Opcode;ClassDesc;String;ClassDesc;)
java.lang.classfile.CodeBuilder#invoke(Opcode;MemberRefEntry;)
java.lang.classfile.CodeBuilder#invoke(Opcode;ClassDesc;String;MethodTypeDesc;boolean;)
java.lang.classfile.CodeBuilder#arrayLoad(TypeKind;)
java.lang.classfile.CodeBuilder#arrayStore(TypeKind;)
java.lang.classfile.CodeBuilder#conversion(TypeKind;TypeKind;)
java.lang.classfile.CodeBuilder#loadConstant(Opcode;ConstantDesc;)
java.lang.classfile.CodeBuilder#loadConstant(ConstantDesc;)
java.lang.classfile.CodeBuilder#instanceOf(ClassEntry;)
java.lang.classfile.CodeBuilder#instanceOf(ClassDesc;)
java.lang.classfile.ClassSignature#of(Signature.ClassTypeSig;Signature.ClassTypeSig[];)
java.lang.classfile.ClassSignature#of(List<Signature.TypeParam>;Signature.ClassTypeSig;Signature.ClassTypeSig[];)
java.lang.ScopedValue.Carrier#call(java.lang.ScopedValue.CallableOp<? extends R,X>;)
java.lang.ScopedValue.CallableOp
java.lang.ScopedValue#callWhere(java.lang.ScopedValue<T>;T;java.lang.ScopedValue.CallableOp<? extends R,X>;)
java.text.NumberFormat#isStrict()
java.text.NumberFormat#setStrict(boolean;)
java.text.DecimalFormat#isStrict()
java.text.DecimalFormat#setStrict(boolean;)
java.text.DecimalFormat#parseStrict
java.text.CompactNumberFormat#parseStrict
java.text.CompactNumberFormat#isStrict()
java.text.CompactNumberFormat#setStrict(boolean;)
java.time.Instant#until(java.time.Instant;)
jdk.jshell.Snippet.SubKind#MODULE_IMPORT_SUBKIND
com.sun.source.tree.ImportTree#isModule()
com.sun.source.util.DocTrees#getDocCommentKind(TreePath;)
com.sun.source.util.DocTreeFactory#newRawTextTree(DocTree.Kind;String;)
com.sun.source.util.DocTreeScanner#visitRawText(RawTextTree;P;)
com.sun.source.util.SimpleDocTreeVisitor#visitRawText(RawTextTree;P;)
com.sun.source.doctree.DocTree.Kind#MARKDOWN
com.sun.source.doctree.RawTextTree
com.sun.source.doctree.DocTreeVisitor#visitRawText(RawTextTree;P;)
javax.lang.model.util.Types#stripAnnotations(T;)
javax.lang.model.util.Elements#getDocCommentKind(Element;)
javax.lang.model.util.Elements.DocCommentKind
javax.lang.model.util.ElementScannerPreview
javax.lang.model.util.TypeKindVisitorPreview
javax.lang.model.util.SimpleTypeVisitorPreview
javax.lang.model.util.ElementKindVisitorPreview
javax.lang.model.util.AbstractTypeVisitorPreview
javax.lang.model.util.SimpleElementVisitorPreview
javax.lang.model.util.AbstractElementVisitorPreview
javax.lang.model.util.SimpleAnnotationValueVisitorPreview
javax.lang.model.util.AbstractAnnotationValueVisitorPreview
javax.lang.model.SourceVersion#RELEASE_23
javax.tools.SimpleJavaFileObject#forSource(URI;String;)